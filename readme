Zint and libzint 2.3.0
----------------------
Zint is a suite of programs to allow easy encoding of data in any of the wide range of public domain
barcode standards and to allow integration of this capability into your own programs. This version
of Zint is able to encode data in the following formats:

Code 11, Standard Code 2 of 5, IATA Code 2 of 5, Industrial Code 2 of 5, Interleaved Code 2 of 5,
Code 2 of 5 Data Logic, ITF-14, Deutche Post Leitcode, Deutche Post Identcode, UPC-A, UPC-E, EAN-2,
EAN-5, EAN-8, EAN-13, UK Plessey, MSI Plessey, Telepen Alpha, Telepen Numeric, Code 39,
Extended Code 39, Code 93, PZN, Code 23, LOGMARS, Codabar, Pharmacode, Code 128, EAN-128, NVE-18,
Code 16k, PDF417, MicroPDF417, Two-Track Pharmacode, PostNet, PLANET, Australia Post 4-State Symbols,
RM4SCC, USPS OneCode, GS1 DataBar, DataBar-14, DataBar Limited, DataBar Extended, DataBar Stacked,
Composite Symbology, Data Matrix, QR Code, Maxicode, Aztec Code, EAN-13, Codablock-F, Micro QR,
Korea Post Barcode, HIBC Code 128, HIBC Code 39, HIBC Data Matrix, HIBC PDF417, HIBC MicroPDF417,
HIBC QR Code, HIBC Codablock-F, HIBC Aztec Code, Japanese Postal Code, Code 49, Channel Code, Code One,
Grid Matrix, FIM and Flattermarken.

Full documentation is available at project website: http://www.zint.org.uk


PROJECT STATUS
--------------
This release features a complete rebuild of QR Code and Micro QR Code functionality which now:

* Automatically detects and adjusts to Japanese characters
* Supports GS1 encoding
* Does not require the qrencode library.

Also new in this release is Grid Matrix support which similarly supports Chinese character encoding.


COMPILING THE CODE
------------------
This package includes files for compiling in a number of ways depending on what functionality you
want and what platform you are targeting. Zint has been tested on both 32 and 64-bit systems.
It does not use any unusual memory manipulation and so should easily port to a wide range of hardware.

GNU/Linux and OpenBSD:
To compile the Zint library for you will need libpng and libz pre-installed. Then:

	make
	make install

For some distributions it may be necessary to run

	ldconfig

as root before libzint can be used.

To install the GUI interface you will need Qt4 and cmake. Follow these steps:

	cd build
	cmake ..
	make -j2
	make install

The command line program can be accessed by typing

	zint {options} -d {data}

Notice that the data needs to be entered after all other options. Any options given after the
data will be ignored. The GUI can be accessed by typing

	zint-qt

MS Windows:
On the Windows platform you have the choice of compiling with MinGW or with the native compiler,
Microsoft Visual C++. To compile with MinGW follow the instructions for Linux above substituting
the MinGW makefiles for the default Linux ones. For compiling with MS Visual Studio open the
libzint.vcproj project file in the win32 folder and compile in the usual way.

Mac OSX:
HELP NEEDED! It _is_ possible to compile and run Zint on the OSX platform. Unfortunately the
developers of the Zint package do not have access to OSX. If you have any success with comiling
Zint on OSX then please send us a description of how you did it so that we can put that
information here!


THINGS TO DO
------------
If you are interested in improving this package then here are a few ideas.

Backend
-------
	* Create filters for more output file formats.
	* Add ECI character support to allow encoding in more languages than are covered
	  by the Latin-1 character set.
	* The code was developed to be easy to understand rather than efficient so may benefit
	  from some memory optimisation for embedded systems.

GUI Frontend
------------
	* Allow copying of generated barcodes to the clipboard with a "Copy" button.
	* Allow dragging and dropping to external apps.

Packaging
---------
	Binary packages are needed for distribution in the following formats
	* RPMs for various Linux distros (.spec file now available thanks to Radist)
	* Install binaries for MS Windows (MSVC and MinGW make files now included)
	* Install binaries for Mac OSX

Translations
------------
	Documentation is currently only in English. If you have the knowledge and the
	time please consider translating into other languages.

Research
--------
	The following standards would be welcomed in Zint but the full documentation has
	not yet been found.
	* DPD Code
	* Italian Postal Code


CONTACT ME
----------
The home of libzint is:

	http://www.sourceforge.net/projects/zint

and the home for information about Zint is:

	http://www.zint.org.uk

I am keen to hear your ideas / recieve bug reports at robin@zint.org.uk

Thanks for your interest in libzint.
Happy encoding.

Robin.



